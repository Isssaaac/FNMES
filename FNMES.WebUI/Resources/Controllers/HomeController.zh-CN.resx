<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEquipment" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddPermission" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddRole" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddRoute" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddUnitProcedure" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>添加</value>
  </data>
  <data name="Authorization" xml:space="preserve">
    <value>授权</value>
  </data>
  <data name="BarcodeRule" xml:space="preserve">
    <value>条码规则</value>
  </data>
  <data name="BindRecord" xml:space="preserve">
    <value>绑定记录</value>
  </data>
  <data name="BlockOutStation" xml:space="preserve">
    <value>模组出站</value>
  </data>
  <data name="CancelOrder" xml:space="preserve">
    <value>取消工单</value>
  </data>
  <data name="CellOutStation" xml:space="preserve">
    <value>电芯出站</value>
  </data>
  <data name="DataRecord" xml:space="preserve">
    <value>数据记录</value>
  </data>
  <data name="DeleteEquipment" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteErrorLog" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteOperateLog" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeletePermission" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteRole" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteRoute" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteRunningLog" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteUnitProcedure" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteUser" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DetectRecord" xml:space="preserve">
    <value>检测记录</value>
  </data>
  <data name="EditEquipment" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="EditPermission" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="EditRole" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="EditRoute" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="EditUnitProcedure" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="EditUser" xml:space="preserve">
    <value>编辑</value>
  </data>
  <data name="EquipmentRegister" xml:space="preserve">
    <value>设备注册</value>
  </data>
  <data name="ErrorLog" xml:space="preserve">
    <value>错误日志</value>
  </data>
  <data name="ExportErrorLog" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="ExportOperateLog" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="ExportRunningLog" xml:space="preserve">
    <value>导出</value>
  </data>
  <data name="ExternelLog" xml:space="preserve">
    <value>外部日志</value>
  </data>
  <data name="FastBind" xml:space="preserve">
    <value>快速绑定</value>
  </data>
  <data name="FastUnbind" xml:space="preserve">
    <value>快速解绑</value>
  </data>
  <data name="GetOrder" xml:space="preserve">
    <value>获取工单</value>
  </data>
  <data name="GetProduct" xml:space="preserve">
    <value>获取产品</value>
  </data>
  <data name="GetRecipe" xml:space="preserve">
    <value>获取配方</value>
  </data>
  <data name="LineMangement" xml:space="preserve">
    <value>线体管理</value>
  </data>
  <data name="LogMangement" xml:space="preserve">
    <value>日志管理</value>
  </data>
  <data name="OfflineRecord" xml:space="preserve">
    <value>离线记录</value>
  </data>
  <data name="OperateLog" xml:space="preserve">
    <value>操作日志</value>
  </data>
  <data name="OperationMangement" xml:space="preserve">
    <value>操作管理</value>
  </data>
  <data name="OrderMangement" xml:space="preserve">
    <value>工单</value>
  </data>
  <data name="OutstationRecord" xml:space="preserve">
    <value>出站记录</value>
  </data>
  <data name="PartRecord" xml:space="preserve">
    <value>物料记录</value>
  </data>
  <data name="PauseOrder" xml:space="preserve">
    <value>暂停工单</value>
  </data>
  <data name="Permission" xml:space="preserve">
    <value>权限</value>
  </data>
  <data name="Preprocess" xml:space="preserve">
    <value>预处理段</value>
  </data>
  <data name="ProcessMangement" xml:space="preserve">
    <value>工艺配置</value>
  </data>
  <data name="ProcessRecord" xml:space="preserve">
    <value>过程记录</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>产品列表</value>
  </data>
  <data name="ProductMangement" xml:space="preserve">
    <value>产品管理</value>
  </data>
  <data name="RecipeESOP" xml:space="preserve">
    <value>ESOP</value>
  </data>
  <data name="RecipeMangement" xml:space="preserve">
    <value>配方管理</value>
  </data>
  <data name="RecipeParam" xml:space="preserve">
    <value>配方参数</value>
  </data>
  <data name="RecipePart" xml:space="preserve">
    <value>配方物料</value>
  </data>
  <data name="RecipeStep" xml:space="preserve">
    <value>配方工步</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>生产数据</value>
  </data>
  <data name="Repair" xml:space="preserve">
    <value>返修</value>
  </data>
  <data name="ResetPasswords" xml:space="preserve">
    <value>重置密码</value>
  </data>
  <data name="RoleMangement" xml:space="preserve">
    <value>角色管理</value>
  </data>
  <data name="RouteMangement" xml:space="preserve">
    <value>工艺路线</value>
  </data>
  <data name="RunningLog" xml:space="preserve">
    <value>运行日志</value>
  </data>
  <data name="StartOrder" xml:space="preserve">
    <value>启动工单</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>系统管理</value>
  </data>
  <data name="SystemUser" xml:space="preserve">
    <value>用户</value>
  </data>
  <data name="UnitProcedure" xml:space="preserve">
    <value>设备管理</value>
  </data>
  <data name="ViewEquipment" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="ViewOrder" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="ViewPermission" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="ViewRole" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="ViewUnitProcedure" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="ViewUser" xml:space="preserve">
    <value>查看</value>
  </data>
</root>