@{
    Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    
    <title>工单列表</title>
    <link href="~/Content/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/framework/css/console.css" rel="stylesheet" />
    <link href="~/Content/framework/css/animate.css" rel="stylesheet" />
    <link href="~/Content/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Content/select2/css/select2.css" rel="stylesheet" />
    <!--[if lt IE 9]>
        <script src="/Content/jquery/jquery-1.9.1.min.js"></script>
    <![endif]-->
    <!--[if gte IE 9]><!-->
    <script src="~/Content/jquery/jquery.min.js"></script>
    <!--<![endif]-->
    <!--[if lt IE 9]>
    <script src="https://cdn.staticfile.org/html5shiv/r29/html5.min.js"></script>
    <script src="https://cdn.staticfile.org/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <script src="~/Content/layui/layui.js"></script>
    <script src="~/Content/select2/js/select2.min.js"></script>
    <script src="~/Content/framework/js/global.js"></script>
    <link href="~/Content/ztree/css/metroStyle/metroStyle.css" rel="stylesheet" />
    <script src="~/Content/ztree/js/jquery.ztree.all.min.js"></script>
    <script src="~/Content/select2/js/select2.min.js"></script>
    <style>
        /* CSS样式代码 */
        th.hidden {
            display: none;
        }
    </style>
</head>
<body>
    <div class="panel animated fadeIn">
        <div class="panel-body">
            <div class="layui-inline" style="margin-bottom: 10px;">
                <select lay-ignore name="lineId" class="select2" id="lineId"  style="width: 250px;height: 30px;" lay-verify="required"></select>
                <div class="layui-inline" id="ID-laydate-range">
                    <div class="layui-input-inline">
                        <input type="text" autocomplete="off" id="ID-laydate-start-date" style="width: 200px;height: 30px;" class="layui-input" placeholder="开始日期">
                    </div>
                    <div class="layui-input-inline">
                        <input type="text" autocomplete="off" id="ID-laydate-end-date" style="width: 200px;height: 30px;" class="layui-input" placeholder="结束日期">
                    </div>
                </div>
            </div>

            <div id="toolbar" class="FNMES-table-toolbar">
                <div class="layui-btn-group">
                </div>
                <div class="layui-btn-group">
                    <button id="btnfilter" class="layui-btn layui-btn-primary layui-btn-small" lay-on="test-iframe-handle">查询数据</button>
                    <button id="btnfilter_export_data" class="layui-btn layui-btn-primary layui-btn-small">导出数据</button>
                    <button onclick="export_outstation_btn()" class="layui-btn layui-btn-primary layui-btn-small">仅导出过站</button>
                </div>
                <button id="btnSearch" class="toolbar-search-button layui-btn layui-btn-normal layui-btn-small" style="line-height:20px">
                        <i class="layui-icon">&#xe615;</i>
                </button>
                <div class="toolbar-search-input">
                    <input type="text" id="keyWord" placeholder="key" autocomplete="off" class="layui-input" style="height:39px">
                </div>
            </div>

            <table id="gridList" class="layui-form layui-table table-hover FNMES-table" lay-skin="line">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" lay-skin="primary">
                        </th>
                        <th>内控码</th>
                        <th>工位</th>
                        <th>工单号</th>
                        <th>状态</th>
                        <th>不良代码</th>
                        <th>不良描述</th>
                        <th>过站时间</th>
                        <th>进站时间</th>
                        <th>载具码</th>
                    </tr>
                </thead>
                <!--内容容器-->
                <tbody id="content"></tbody>
            </table>
            <div id="paged"></div>
        </div>
    </div>
</body>
</html>

<!--内容模板-->
<script id="contentTpl" type="text/html">
      {{#  layui.each(d.list, function(index, item){ }}
    <tr>
        <td>
            <input type="checkbox" lay-skin="primary" value="{{item.Id}}"></td>
        <td>{{item.ProductCode}}</td>
        <td>{{item.StationCode}}</td>
        <td>{{item.TaskOrderNumber}}</td>
        <td>{{item.ProductStatus}}</td>
        <td>{{item.DefectCode}}</td>
        <td>{{item.DefectDesc}}</td>
        <td>{{item.CreateTime}}</td>
        <td>{{item.instationTime}}</td>
        <td>{{item.palletNo}}</td>
    </tr>
      {{#  }); }}
       {{# if(d.list.length<=0) { }}
          <tr style="color: red">
              <td colspan="8">查无数据。</td>
          </tr>
      {{# } }}
</script>

<script type="text/javascript">
    var paging;
    layui.config({
        base: parent._baseUrl
    }).use(['paging', 'form', 'layer', 'laydate', 'util'], function () {
        var layer = layui.layer;
        var form = layui.form;

        var laydate = layui.laydate;

        $('#btnfilter').on('click', function () {
            var index = layer.open({
                type: 2,
                title: '子页面 - 方法三',
                area: ['1200px', '600px'],
                content: '/record/outstation/queryfilter',
                success: function (layero, index) {
                    // 获取iframe的window对象
                    var iframeWin = window[layero.find('iframe')[0]['name']];
                    // 向子页面暴露父页面方法
                    iframeWin.sendToParent = function (data) {
                        var conditions = JSON.stringify(data, null, 2)
                        initGrid(conditions);
                        layer.msg('执行查询');
                        layer.close(index);
                    };
                }
            });
        });

        $('#btnfilter_export_data').on('click', function () {
            var index = layer.open({
                type: 2,
                title: '子页面 - 方法三',
                area: ['1200px', '600px'],
                content: '/record/outstation/queryfilterExport',
                success: function (layero, index) {
                    // 获取iframe的window对象
                    var iframeWin = window[layero.find('iframe')[0]['name']];
                    // 向子页面暴露父页面方法
                    iframeWin.sendToParentExport = function (data) {
                        var conditions = JSON.stringify(data, null, 2)
                        export_condition(conditions);
                        layer.msg('执行查询');
                        layer.close(index);
                    };
                }
            });
        });

        $("#ID-laydate-start-date").val($.getCurrentDateTime(-7));
        $("#ID-laydate-end-date").val($.getCurrentDateTime(0));
        // 日期范围 - 左右面板独立选择模式
        laydate.render({
            elem: '#ID-laydate-range',
            range: ['#ID-laydate-start-date', '#ID-laydate-end-date']
        });

        paging = layui.paging();
        $("#lineId").bindSelect({
            type: "POST",
            url: "/system/line/getListTreeSelect",
            title: '请选择线体'
        });
        $("#toolbar").authorizeButton();
        $('#btnSearch').click(function () { 
            initGrid();
        })
        $('#keyWord').bindEnterEvent(function () { 
            initGrid();
        });
       // initGrid();
    });

    
    //$("#lineId").bindChangeEvent(initGrid);
    $("#lineId").on("select2:select", function (e) {
    // 处理选择事件
        if ($("#lineId").val() == "0") {
            return
        };
        initGrid();
    });

    function flush(){
        if( $("#lineId").val() == "0"){
            return
        };
        initGrid();
    }

    $('#queryDate').find('button').click(function (i, v) {
        $(this).addClass('active');
        $(this).siblings('button').removeClass('active');
        initGrid();
    });

    function initGrid(conditions) {
        if ($("#lineId").val() == "0") {
            return
        };

        var startDate = $('#ID-laydate-start-date').val();
        var endDate = $('#ID-laydate-end-date').val();

        var stime = Date.parse(new Date(startDate));
        var etime = Date.parse(new Date(endDate));
        var usedTime = etime - stime;
        var days = Math.floor(usedTime / (24 * 3600 * 1000));

        //var days = $.calDays(startDate, endDate);
        if (days > 90) { 

            $.layerMsg("日期间隔不能大于90天。", "warning");
            return
        }
        
        paging.init({
            url: '/record/outstation/condition',
            elem: '#content',
            tempElem: '#contentTpl',
            singleSelected: true, //单选
            params: {
                configId: $("#lineId").val(),
                startDate: $('#ID-laydate-start-date').val(),
                endDate: $('#ID-laydate-end-date').val(),
                productCode:$('#productCode').val(),
                condition:conditions
            },
            pageConfig: {
                elem: 'paged',
                pageSize: 16,
            },
            success: function () {

            }
        });
    }

    function btn_process() {
        var ids = $("#gridList").gridSelectedRowValue();
        if (ids.length != 1) {
            $.layerMsg("请勾选单条记录查看。", "warning");
            return;
        }
        var data = $("#gridList").gridSelectedRowData();
        $.ajax({
            url: '/record/process/exist',
            method: 'GET',
            data: {
                productCode: data[1],
                stationCode: data[2],
                configId: $("#lineId").val() },
            success: function (res) {
                var response = JSON.parse(res);
                if (response.state == 1) {
                    // 打开子页面
                    $.layerOpen({
                        id: "detail",
                        title: "查看数据",
                        width: "800px",
                        height: "500px",
                        content: "/record/process/index?productCode=" + data[1] + "&stationCode=" + data[2] + "&configId=" + $("#lineId").val(),
                        btn: null
                    });
                }else {
                    $.layerMsg("没有找到相关数据。", "warning");
                }
            },
            error: function (error) {
                // 处理查询错误
                $.layerMsg("查询出错。", "error");
            }
        });
    }

    function btn_part() {
        var ids = $("#gridList").gridSelectedRowValue();

        if (ids.length != 1) {
            $.layerMsg("请勾选单条记录查看。", "warning");
            return;
        }
        var data = $("#gridList").gridSelectedRowData();
        $.ajax({
            url: '/record/part/exist',
            method: 'GET',
            data: {
                productCode: data[1],
                stationCode: data[2],
                configId: $("#lineId").val()
            },
            success: function (res) {
                var response = JSON.parse(res);
                if (response.state == 1) {
                    // 打开子页面
                    $.layerOpen({
                        id: "detail",
                        title: "查看物料",
                        width: "800px",
                        height: "500px",
                        content: "/record/part/index?productCode=" + data[1] + "&stationCode=" + data[2] + "&configId=" + $("#lineId").val(),
                        btn: null
                    });
                }else { $.layerMsg("没有找到相关数据。", "warning"); }
               
            },
            error: function (error) {
                // 处理查询错误
                $.layerMsg("查询出错。", "error");
            }
        });
    }

    function export_btn(conditions) {
        if ($("#lineId").val() == "0") {
            $.layerMsg("请先选择线体。", "warning");
            return;
        }
        var startDate = $('#ID-laydate-start-date').val();
        var endDate = $('#ID-laydate-end-date').val();

        var stime = Date.parse(new Date(startDate));
        var etime = Date.parse(new Date(endDate));

        $.layerMsg("正在请求导出...请耐心等待", "warning");

        // 发送请求到后端以触发文件导出  + "&index=" + $('#queryDate').find('button.active').val()
        fetch("/record/outstation/export?configId=" + $("#lineId").val() + "&startdate=" + stime + "&enddate=" + etime + "&conditions=" + conditions, {
            method: "GET",
        })
        .then(response => {
            // 检查响应状态是否成功
            if (!response.ok) {
                return response.text();
            }
            return response.blob();
        })
        .then(blob => {
            if (typeof blob == "string") {
                $.layerMsg(blob, "warning");
                return
            }
            
            // 创建一个临时链接以下载文件
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement("a");
            a.href = url;
            a.download = $("#lineId").val() + "-OutstationData" + ".xlsx"; // 文件名
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
            });
        // .catch(error => {
        //     console.log("未捕获的错误：", error);
        // })
    }

    function export_condition(conditions) {
        if ($("#lineId").val() == "0") {
            $.layerMsg("请先选择线体。", "warning");
            return;
        }
        var startDate = $('#ID-laydate-start-date').val();
        var endDate = $('#ID-laydate-end-date').val();

        var stime = Date.parse(new Date(startDate));
        var etime = Date.parse(new Date(endDate));
        var usedTime = etime - stime;
        var days = Math.floor(usedTime / (24 * 3600 * 1000));

        if (days > 90) {
            $.layerMsg("日期间隔不能大于90天", "warning");
            return
        }
        $.layerMsg("正在请求导出...请耐心等待", "warning");
        //文件下载用fetch
        fetch("/record/outstation/exportCon?configId=" + $("#lineId").val() + "&startDate=" + startDate + "&endDate=" + endDate + "&productCode=" + $('#productCode').val() + "&conditions=" + conditions, {
            method: "GET",
        })
            .then(response => {
                // 检查响应状态是否成功
                if (!response.ok) {
                    return response.text();
                }
                return response.blob();
            })
            .then(blob => {
                if (typeof blob == "string") {
                    $.layerMsg(blob, "warning");
                    return
                }

                // 创建一个临时链接以下载文件
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement("a");
                a.href = url;
                a.download = $("#lineId").val() + "-OutstationData" + ".xlsx"; // 文件名
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
            });
    }

    function export_outstation_btn() {
        if ($("#lineId").val() == "0") {
            $.layerMsg("请先选择线体。", "warning");
            return;
        }
        var startDate = $('#ID-laydate-start-date').val();
        var endDate = $('#ID-laydate-end-date').val();

        var stime = Date.parse(new Date(startDate));
        var etime = Date.parse(new Date(endDate));
        var usedTime = etime - stime;
        var days = Math.floor(usedTime / (24 * 3600 * 1000));

        if (days > 90) {
            $.layerMsg("日期间隔不能大于90天", "warning");
            return
        }
        $.layerMsg("正在请求导出...请耐心等待", "warning");
        //文件下载用fetch
        fetch("/record/outstation/exportOutstation?configId=" + $("#lineId").val() + "&startDate=" + startDate + "&endDate=" + endDate + "&productCode=" + $('#productCode').val() + "&order=" + $('#order').val(), {
            method: "GET",
        })
            .then(response => {
                // 检查响应状态是否成功
                if (!response.ok) {
                    return response.text();
                }
                return response.blob();
            })
            .then(blob => {
                if (typeof blob == "string") {
                    $.layerMsg(blob, "warning");
                    return
                }

                // 创建一个临时链接以下载文件
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement("a");
                a.href = url;
                a.download = $("#lineId").val() + "-OutstationData" + ".xlsx"; // 文件名
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);
            });
    }

</script>